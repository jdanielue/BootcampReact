{"ast":null,"code":"var _jsxFileName = \"/root/BootcampReact/yuximon/src/components/InfoPokemon.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"../InfoPokemon.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoPokemon = ({\n  pokemon,\n  setInfo\n}) => {\n  _s();\n\n  const [openUrl, setOpenUrl] = useState(false);\n\n  const hadlerInfo = async () => {\n    try {\n      const res = await axios.get(pokemon.url);\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200 || (res === null || res === void 0 ? void 0 : res.status) === 201) {\n        const data = await res.data;\n        setInfo(data);\n        console.log(data.abilities.ability.name);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"containerInfoPokemon\",\n    children: [pokemon.name, openUrl && pokemon.url, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: hadlerInfo,\n      children: \"Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, pokemon.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfoPokemon, \"5nSkwFVmR0dhVzn22Xa9hrvdq4E=\");\n\n_c = InfoPokemon;\nexport default InfoPokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoPokemon\");","map":{"version":3,"sources":["/root/BootcampReact/yuximon/src/components/InfoPokemon.jsx"],"names":["useState","axios","InfoPokemon","pokemon","setInfo","openUrl","setOpenUrl","hadlerInfo","res","get","url","status","data","console","log","abilities","ability","name","err"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA0B;AAAA;;AAC5C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMO,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUN,OAAO,CAACO,GAAlB,CAAlB;;AACA,UAAI,CAAAF,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEG,MAAL,MAAgB,GAAhB,IAAuB,CAAAH,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEG,MAAL,MAAgB,GAA3C,EAAgD;AAC9C,cAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAvB;AACAR,QAAAA,OAAO,CAACQ,IAAD,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,SAAL,CAAeC,OAAf,CAAuBC,IAAnC;AACD;AACF,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD;AACF,GAXD;;AAaA,sBACE;AAAI,IAAA,SAAS,EAAE,sBAAf;AAAA,eACGf,OAAO,CAACc,IADX,EAEGZ,OAAO,IAAIF,OAAO,CAACO,GAFtB,eAGE;AAAQ,MAAA,OAAO,EAAEH,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,KAA4CJ,OAAO,CAACc,IAApD;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvBD;;GAAMf,W;;KAAAA,W;AAyBN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\nimport \"../InfoPokemon.css\";\nimport axios from \"axios\";\n\nconst InfoPokemon = ({ pokemon, setInfo }) => {\n  const [openUrl, setOpenUrl] = useState(false);\n\n  const hadlerInfo = async () => {\n    try {\n      const res = await axios.get(pokemon.url);\n      if (res?.status === 200 || res?.status === 201) {\n        const data = await res.data;\n        setInfo(data);\n        console.log(data.abilities.ability.name);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <li className={\"containerInfoPokemon\"} key={pokemon.name}>\n      {pokemon.name}\n      {openUrl && pokemon.url}\n      <button onClick={hadlerInfo}>Info</button>\n    </li>\n  );\n};\n\nexport default InfoPokemon;\n"]},"metadata":{},"sourceType":"module"}