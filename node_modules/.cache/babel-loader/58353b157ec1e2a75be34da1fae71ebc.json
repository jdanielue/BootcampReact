{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef, Fragment } from \"react\";\n\nconst useRequest = url => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [pokemonsList, setPokemonsList] = useState([]); //axios\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const {\n          data: {\n            results\n          }\n        } = await axios.get(url); // console.log(results);\n\n        setLoading(false);\n        setPokemonsList(results);\n      } catch (error) {}\n    };\n\n    setTimeout(() => {\n      getData();\n    }, 1000);\n  }, []);\n  return {\n    loading,\n    pokemonsList\n  };\n};\n\n_s(useRequest, \"CG7xACYu509Z6Rnl2CztylX7snU=\");\n\nexport default useRequest;","map":{"version":3,"sources":["/root/BootcampReact/yuximon/src/components/Apirequest.jsx"],"names":["useEffect","useState","useRef","Fragment","useRequest","url","loading","setLoading","pokemonsList","setPokemonsList","getData","data","results","axios","get","error","setTimeout"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,QAAtC,QAAsD,OAAtD;;AAGA,MAAMC,UAAU,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD,CAFwB,CAIxB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAM;AACJC,UAAAA,IAAI,EAAE;AAAEC,YAAAA;AAAF;AADF,YAEF,MAAMC,KAAK,CAACC,GAAN,CAAUT,GAAV,CAFV,CADE,CAIF;;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,eAAe,CAACG,OAAD,CAAf;AACD,OAPD,CAOE,OAAOG,KAAP,EAAc,CAAE;AACnB,KATD;;AAUAC,IAAAA,UAAU,CAAC,MAAM;AACfN,MAAAA,OAAO;AACR,KAFS,EAEP,IAFO,CAAV;AAGD,GAdQ,EAcN,EAdM,CAAT;AAeA,SAAO;AACLJ,IAAAA,OADK;AAELE,IAAAA;AAFK,GAAP;AAID,CAxBH;;GAAMJ,U;;AA0BJ,eAAeA,UAAf","sourcesContent":["import { useEffect, useState, useRef, Fragment } from \"react\";\n\n\nconst useRequest = (url) => {\n    const [loading, setLoading] = useState(true);\n    const [pokemonsList, setPokemonsList] = useState([]);\n  \n    //axios\n    useEffect(() => {\n      const getData = async () => {\n        try {\n          const {\n            data: { results },\n          } = await axios.get(url);\n          // console.log(results);\n          setLoading(false);\n          setPokemonsList(results);\n        } catch (error) {}\n      };\n      setTimeout(() => {\n        getData();\n      }, 1000);\n    }, []);\n    return {\n      loading,\n      pokemonsList,\n    };\n  };\n\n  export default useRequest;"]},"metadata":{},"sourceType":"module"}