{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useRequest = (url, setpokemonToFiltered) => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [pokemonsList, setPokemonsList] = useState([]); //axios\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const {\n          data: {\n            results\n          }\n        } = await axios.get(url);\n        console.log(results);\n        setLoading(false);\n        setPokemonsList(results);\n        setpokemonToFiltered(results);\n      } catch (error) {}\n    };\n\n    setTimeout(() => {\n      getData();\n    }, 1000);\n  }, []);\n  return {\n    loading,\n    pokemonsList\n  };\n};\n\n_s(useRequest, \"CG7xACYu509Z6Rnl2CztylX7snU=\");\n\nexport default useRequest;","map":{"version":3,"sources":["/root/BootcampReact/yuximon/src/hooks/useRequest.jsx"],"names":["useEffect","useState","axios","useRequest","url","setpokemonToFiltered","loading","setLoading","pokemonsList","setPokemonsList","getData","data","results","get","console","log","error","setTimeout"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,oBAAN,KAA+B;AAAA;;AAChD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD,CAFgD,CAIhD;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAM;AACJC,UAAAA,IAAI,EAAE;AAAEC,YAAAA;AAAF;AADF,YAEF,MAAMV,KAAK,CAACW,GAAN,CAAUT,GAAV,CAFV;AAGAU,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,eAAe,CAACG,OAAD,CAAf;AACAP,QAAAA,oBAAoB,CAACO,OAAD,CAApB;AACD,OARD,CAQE,OAAOI,KAAP,EAAc,CAAE;AACnB,KAVD;;AAWAC,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,OAAO;AACR,KAFS,EAEP,IAFO,CAAV;AAGD,GAfQ,EAeN,EAfM,CAAT;AAgBA,SAAO;AACLJ,IAAAA,OADK;AAELE,IAAAA;AAFK,GAAP;AAID,CAzBD;;GAAML,U;;AA2BN,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useRequest = (url, setpokemonToFiltered) => {\n  const [loading, setLoading] = useState(true);\n  const [pokemonsList, setPokemonsList] = useState([]);\n\n  //axios\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const {\n          data: { results },\n        } = await axios.get(url);\n        console.log(results);\n        setLoading(false);\n        setPokemonsList(results);\n        setpokemonToFiltered(results);\n      } catch (error) {}\n    };\n    setTimeout(() => {\n      getData();\n    }, 1000);\n  }, []);\n  return {\n    loading,\n    pokemonsList,\n  };\n};\n\nexport default useRequest;\n"]},"metadata":{},"sourceType":"module"}